{"ts":1372536790207,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1372536791797,"patch":[[{"diffs":[[1,"\"use strict\";\nvar express = require(\"express\"),\n    app = express(),\n    server = require('http').createServer(app);\napp.configure(function() {\n    app.use(express.static(__dirname + '/public'));\n});\nserver.listen(process.env.PORT, process.env.IP);\n\n//start moongoose\nvar mongoose = require('mongoose');\n//connect to import mongo database\nmongoose.connect(process.env.IP + \"/import\");\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'mongodb connection error:'));\ndb.once('open', function callback() {\n    console.log(\"mongodb connected to : \" + process.env.IP + \"/import\");\n    //Mongoose schema\n    var patientSchema = mongoose.Schema({\n        dob: String,\n        fname: String,\n        lname: String,\n        sex: Number,\n        address: String,\n        address2: String,\n        zip: Number,\n        city: String,\n        phone: String\n    });\n    // Mongoose model\n    var patientModel = mongoose.model('patient', patientSchema);\n    // DB queries and result\n    app.get('/search', function(req, res) {\n//respond to a queri : /search?qdob=<dob>\n        var varQdob = req.query.qdob;\n        \n// find the patients matching dob\n        patientModel.find({\n            dob: varQdob\n        }, function(err, schrpatient) {\n            if (err) console.log(\"dob query error\");\n//addresult to object result for mustache templating\n            var varResult = {\n                result: schrpatient\n            };\n            //send result as json\n            res.json(varResult);\n            \n\n        });\n    });\n});\n// routeur\napp.get('/', function(req, res) {\n    res.redirect(\"../search.html\");\n});\n\n\n"]],"start1":0,"start2":0,"length1":0,"length2":1631}]],"length":1631,"saved":false}
{"contributors":[],"silentsave":false,"ts":1372545336962,"patch":[[{"diffs":[[1,"// Copyright 2013 Thibaut CONSTANT\n// This file is part of MEDIASSISTANT.\n// \n//     Mediassistant is free software: you can redistribute it and/or modify\n//     it under the terms of the GNU General Public License as published by\n//     the Free Software Foundation, either version 3 of the License, or\n//     (at your option) any later version.\n// \n//     Mediassistant is distributed in the hope that it will be useful,\n//     but WITHOUT ANY WARRANTY; without even the implied warranty of\n//     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//     GNU General Public License for more details.\n// \n//     You should have received a copy of the GNU General Public License\n//     along with Mediassistant.  If not, see <http://www.gnu.org/licenses/>.\n// \n"],[0,"\"use str"]],"start1":0,"start2":0,"length1":8,"length2":781},{"diffs":[[0,"ect("],[-1,"process.env.IP + \"/import"],[1,"\"mongo dharma.mongohq.com:10028/app16615432"],[0,"\");\n"]],"start1":1125,"start2":1125,"length1":33,"length2":51},{"diffs":[[0,"\" + "],[-1,"process.env.IP + \"/import"],[1,"\"mongo dharma.mongohq.com:10028/app16615432"],[0,"\");\n"]],"start1":1358,"start2":1358,"length1":33,"length2":51}]],"length":2440,"saved":false}
{"ts":1372545498804,"patch":[[{"diffs":[[0,"nnect(\"mongo"],[-1," "],[1,"db://moongoose:moongoose123456789@"],[0,"dharma.mongo"]],"start1":1123,"start2":1123,"length1":25,"length2":58}]],"length":2473,"saved":false}
{"ts":1372545786392,"patch":[[{"diffs":[[0,"b://"],[-1,"moongoose:moongoose123456789@dharma.mongohq.com:10028/app16615432"],[1,"\"+process.env.IP + \"/import"],[0,"\");\n"]],"start1":1136,"start2":1136,"length1":73,"length2":35},{"diffs":[[0,"\" + "],[-1,"\"mongo dharma.mongohq.com:10028/app16615432"],[1,"process.env.IP + \"/import"],[0,"\");\n"]],"start1":1353,"start2":1353,"length1":51,"length2":33}]],"length":2417,"saved":false}
{"ts":1372545890740,"patch":[[{"diffs":[[0,"b://"],[-1,"\"+process.env.IP + \"/import"],[1,"test:test@dharma.mongohq.com:10028/app16615432"],[0,"\");\n"]],"start1":1136,"start2":1136,"length1":35,"length2":54}]],"length":2436,"saved":false}
{"ts":1372545936676,"patch":[[{"diffs":[[0,"\" + "],[-1,"process.env.IP + \"/import"],[1,"\"mongodb://dharma.mongohq.com:10028/app16615432"],[0,"\");\n"]],"start1":1372,"start2":1372,"length1":33,"length2":55}]],"length":2458,"saved":false}
{"contributors":[],"silentsave":false,"ts":1372554452672,"patch":[[{"diffs":[[0,"));\n});\n"],[1,"app.use(express.basicAuth(‘testUser’, 'testPass'));\n"],[0,"server.l"]],"start1":965,"start2":965,"length1":16,"length2":68}]],"length":2510,"saved":false}
{"ts":1372554470140,"patch":[[{"diffs":[[0,"uth("],[-1,"‘"],[1,"'"],[0,"testUser"],[-1,"’"],[1,"'"],[0,", 't"]],"start1":995,"start2":995,"length1":18,"length2":18}]],"length":2510,"saved":false}
{"ts":1372554636124,"patch":[[{"diffs":[[0,"));\n});\n"],[1,"// baasic authentification :\n// "],[0,"app.use("]],"start1":965,"start2":965,"length1":16,"length2":48},{"diffs":[[0,"test"],[-1,"User"],[0,"', 'test"],[-1,"Pass"],[0,"'));"]],"start1":1032,"start2":1032,"length1":24,"length2":16}]],"length":2534,"saved":false}
{"ts":1372554875226,"patch":[[{"diffs":[[0,"ation :\n"],[-1,"// "],[0,"app.use("]],"start1":994,"start2":994,"length1":19,"length2":16}]],"length":2531,"saved":false}
{"ts":1372554970748,"patch":[[{"diffs":[[0,"ation :\n"],[1,"// "],[0,"app.use("]],"start1":994,"start2":994,"length1":16,"length2":19}]],"length":2534,"saved":false}
{"ts":1372555027295,"patch":[[{"diffs":[[0,"ation :\n"],[-1,"// "],[0,"app.use("]],"start1":994,"start2":994,"length1":19,"length2":16}]],"length":2531,"saved":false}
{"contributors":[],"silentsave":false,"ts":1372878632811,"patch":[[{"diffs":[[0,"trict\";\n"],[1,"var param = require(\"param.json\");\n\n"],[0,"var expr"]],"start1":779,"start2":779,"length1":16,"length2":52}]],"length":2567,"saved":false}
{"ts":1372879106674,"patch":[[{"diffs":[[0,"le.log(\""],[-1,"mongodb "],[0,"connecte"]],"start1":1450,"start2":1450,"length1":24,"length2":16},{"diffs":[[0," to "],[-1,": \" + \"mongodb://dharma.mongohq.com:10028/app16615432"],[1,"mongodb"],[0,"\");\n"]],"start1":1467,"start2":1467,"length1":61,"length2":15},{"diffs":[[0,"\n});"],[-1,"\n\n\n"]],"start1":2506,"start2":2506,"length1":7,"length2":4}]],"length":2510,"saved":false}
{"ts":1372879195714,"patch":[[{"diffs":[[0,"uth("],[-1,"'test', 'test'"],[1,"param.login, param.pswd"],[0,"));\n"]],"start1":1060,"start2":1060,"length1":22,"length2":31},{"diffs":[[0,"ect("],[-1,"\"mongodb://test:test@dharma.mongohq.com:10028/app16615432\""],[1,"param.mongodburl"],[0,");\nv"]],"start1":1243,"start2":1243,"length1":66,"length2":24}]],"length":2477,"saved":false}
{"ts":1372879421044,"patch":[[{"diffs":[[0,".json\");"],[1,"\nconsole.log(param)"],[0,"\n\nvar ex"]],"start1":813,"start2":813,"length1":16,"length2":35}]],"length":2496,"saved":false}
{"ts":1372879422918,"patch":[[{"diffs":[[0,"g(param)"],[1,";"],[0,"\n\nvar ex"]],"start1":832,"start2":832,"length1":16,"length2":17}]],"length":2497,"saved":false}
{"ts":1372879440807,"patch":[[{"diffs":[[0,"equire(\""],[1,"/"],[0,"param.js"]],"start1":800,"start2":800,"length1":16,"length2":17}]],"length":2498,"saved":false}
{"ts":1372879487453,"patch":[[{"diffs":[[0,"equire(\""],[1,"."],[0,"/param.j"]],"start1":800,"start2":800,"length1":16,"length2":17}]],"length":2499,"saved":false}
{"ts":1372879542943,"patch":[[{"diffs":[[0,"trict\";\n"],[1,"//require the parameters file\n"],[0,"var para"]],"start1":779,"start2":779,"length1":16,"length2":46},{"diffs":[[0,"n\");"],[-1,"\nconsole.log(param);"],[0,"\n\nva"]],"start1":849,"start2":849,"length1":28,"length2":8}]],"length":2509,"saved":false}
