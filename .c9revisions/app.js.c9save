{"ts":1372536790207,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1372536791797,"patch":[[{"diffs":[[1,"\"use strict\";\nvar express = require(\"express\"),\n    app = express(),\n    server = require('http').createServer(app);\napp.configure(function() {\n    app.use(express.static(__dirname + '/public'));\n});\nserver.listen(process.env.PORT, process.env.IP);\n\n//start moongoose\nvar mongoose = require('mongoose');\n//connect to import mongo database\nmongoose.connect(process.env.IP + \"/import\");\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'mongodb connection error:'));\ndb.once('open', function callback() {\n    console.log(\"mongodb connected to : \" + process.env.IP + \"/import\");\n    //Mongoose schema\n    var patientSchema = mongoose.Schema({\n        dob: String,\n        fname: String,\n        lname: String,\n        sex: Number,\n        address: String,\n        address2: String,\n        zip: Number,\n        city: String,\n        phone: String\n    });\n    // Mongoose model\n    var patientModel = mongoose.model('patient', patientSchema);\n    // DB queries and result\n    app.get('/search', function(req, res) {\n//respond to a queri : /search?qdob=<dob>\n        var varQdob = req.query.qdob;\n        \n// find the patients matching dob\n        patientModel.find({\n            dob: varQdob\n        }, function(err, schrpatient) {\n            if (err) console.log(\"dob query error\");\n//addresult to object result for mustache templating\n            var varResult = {\n                result: schrpatient\n            };\n            //send result as json\n            res.json(varResult);\n            \n\n        });\n    });\n});\n// routeur\napp.get('/', function(req, res) {\n    res.redirect(\"../search.html\");\n});\n\n\n"]],"start1":0,"start2":0,"length1":0,"length2":1631}]],"length":1631,"saved":false}
